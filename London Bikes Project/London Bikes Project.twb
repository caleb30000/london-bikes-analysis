<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_final)' inline='true' name='federated.1rsy97213prhkg112xu0d02qsp4y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.1bo8c3h1dooyz41abo7az02s4qbj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abrah/Desktop/London Bikes Project/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bo8c3h1dooyz41abo7az02s4qbj' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bo8c3h1dooyz41abo7az02s4qbj' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_06EBD573145342EE981454303D7937E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_1556275152010911749]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ SUM(INT([Calculation_1556275152008769540]) * [count]) }' />
      </column>
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
      </column>
      <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_06EBD573145342EE981454303D7937E1]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1556275152008769540]' derivation='Attribute' name='[attr:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_1556275152004837377]' member='#2015-05-01#' />
          <groupfilter function='member' level='[Calculation_1556275152004837377]' member='#2015-10-01#' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Min Month,Max Month,Wind kph,Temp C)' hidden='true' name='[Tooltip (Min Month,Max Month,Wind kph,Temp C)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
          <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1556275152004837377]' />
          <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
          <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.914019' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0859813' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_1556275152008769540:nk]' type='palette'>
            <map to='#0a611b'>
              <bucket>true</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_06EBD573145342EE981454303D7937E1'>
            <properties context=''>
              <relation connection='excel-direct.1bo8c3h1dooyz41abo7az02s4qbj' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_31F6BBD724754BE8BA34D1ED860CF42F]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MovingAverage' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.1rsy97213prhkg112xu0d02qsp4y].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>Temperature vs Wind speed </run>
            <run bold='true' fontcolor='#0a611b' fontsize='10'>between</run>
            <run fontcolor='#0a611b'>Æ </run>
            <run fontcolor='#0a611b' fontsize='10'><![CDATA[<[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]> and <[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1556275152005980162]' derivation='None' name='[none:Calculation_1556275152005980162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152008769540]' derivation='None' name='[none:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1556275152006610947]' derivation='None' name='[none:Min Month (copy)_1556275152006610947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]'>
            <groupfilter function='member' level='[none:Calculation_1556275152008769540:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' />
              <text column='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Temp C:	<[federated.1rsy97213prhkg112xu0d02qsp4y].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Wind kph:	<[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:temp real C (bin):ok]</rows>
        <cols>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[Wind Speed Kph (bin)]</column>
          <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{1FF16E35-4E44-49F9-8269-5D5089CF81C9}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1556275152005980162]' derivation='None' name='[none:Calculation_1556275152005980162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152008769540]' derivation='None' name='[none:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1556275152006610947]' derivation='None' name='[none:Min Month (copy)_1556275152006610947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1556275152004837377]' />
              <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]'>
            <groupfilter function='member' level='[none:Calculation_1556275152008769540:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</column>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rsy97213prhkg112xu0d02qsp4y].[hr:time:ok]' />
              <text column='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rsy97213prhkg112xu0d02qsp4y].[hr:time:ok]</rows>
        <cols>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{11DF6EF6-5266-4D60-83C1-E7C624191B86}' />
    </worksheet>
    <worksheet name='MovingAverage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>&lt;</run>
            <run bold='true' fontcolor='#0a611b'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#0a611b'>&gt; &lt;</run>
            <run bold='true' fontcolor='#0a611b'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#0a611b'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column-instance column='[Calculation_1556275152008769540]' derivation='Attribute' name='[attr:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1556275152004837377]' derivation='None' name='[none:Calculation_1556275152004837377:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152005980162]' derivation='None' name='[none:Calculation_1556275152005980162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1556275152006610947]' derivation='None' name='[none:Min Month (copy)_1556275152006610947:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' included-values='all' />
          <slices>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' field-type='quantitative' max='#2019-01-28#' min='#2013-11-11#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[usr:Calculation1:qk]' field-type='quantitative' max='1770965.9179280957' min='-1089012.6404134599' range-type='fixed' scope='rows' type='space' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#0a611b' />
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#0a611b' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#0a611b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rsy97213prhkg112xu0d02qsp4y].[attr:Calculation_1556275152008769540:nk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' enable-instant-analytics='false' formula='min' id='refline0' label-type='none' paired-id='refline1' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' z-order='1' />
            <reference-line axis-column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' enable-instant-analytics='false' formula='max' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Date:	<[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Moving Average Rides:	<[federated.1rsy97213prhkg112xu0d02qsp4y].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rsy97213prhkg112xu0d02qsp4y].[usr:Calculation1:qk]</rows>
        <cols>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]</cols>
      </table>
      <simple-id uuid='{7856C4AA-C3CA-448F-BE66-7C12FBBB3906}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#0a611b' fontsize='10'><![CDATA[between <[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]> and <[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_1556275152010911749]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ SUM(INT([Calculation_1556275152008769540]) * [count]) }' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1556275152005980162]' derivation='None' name='[none:Calculation_1556275152005980162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152008769540]' derivation='None' name='[none:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1556275152006610947]' derivation='None' name='[none:Min Month (copy)_1556275152006610947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152010911749]' derivation='Sum' name='[sum:Calculation_1556275152010911749:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]'>
            <groupfilter function='member' level='[none:Calculation_1556275152008769540:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:Calculation_1556275152010911749:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:Calculation_1556275152010911749:qk]</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D9900DEA-0C23-4CBA-B695-EDDE236E49F8}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1556275152005980162]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1556275152008769540]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1556275152004837377] &gt;= [Calculation_1556275152005980162]&#13;&#10;AND &#13;&#10;[Calculation_1556275152004837377] &lt;= [Min Month (copy)_1556275152006610947]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_1556275152006610947]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_1556275152004837377] END) }' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1556275152005980162]' derivation='None' name='[none:Calculation_1556275152005980162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1556275152008769540]' derivation='None' name='[none:Calculation_1556275152008769540:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_1556275152006610947]' derivation='None' name='[none:Min Month (copy)_1556275152006610947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1556275152004837377]' />
              <groupfilter function='level-members' level='[Calculation_1556275152005980162]' />
              <groupfilter function='level-members' level='[Min Month (copy)_1556275152006610947]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]'>
            <groupfilter function='member' level='[none:Calculation_1556275152008769540:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</column>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.1rsy97213prhkg112xu0d02qsp4y].[Tooltip (Min Month,Max Month,Wind kph,Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#0a611b' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:weather:nk]' />
              <text column='[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]' />
              <lod column='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:weather:nk]</rows>
        <cols>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{DFB126B5-E59E-46E5-8D8C-DD541BFC8CD3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#0a611b' />
          <format attr='border-style' value='dotted' />
          <format attr='border-color' value='#0a611b' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#0a611b' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_final)' name='federated.1rsy97213prhkg112xu0d02qsp4y' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1rsy97213prhkg112xu0d02qsp4y'>
        <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_1556275152004837377]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
        </column>
        <column-instance column='[Calculation_1556275152004837377]' derivation='None' name='[none:Calculation_1556275152004837377:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='32' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
              <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042'>
                <zone h='34373' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                  <zone h='34373' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                    <zone h='34373' id='3' name='TotalRides' w='27826' x='586' y='1042'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='padding' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='34373' id='5' name='MovingAverage' w='71002' x='28412' y='1042'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='padding' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='63543' id='11' name='Heatmap' w='98828' x='586' y='35415'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7161' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='12592' x='59370' y='1042' />
        <zone h='7292' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11347' x='72108' y='911' />
        <zone h='5599' id='12' type-v2='text' w='10029' x='49122' y='1172'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#0a611b'>Drag and hold to select</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#0a611b'>time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='8594' id='16' name='MovingAverage' param='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' type-v2='filter' values='database' w='12299' x='83529' y='911' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='33' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='7292' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11347' x='72108' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='34373' id='3' is-fixed='true' name='TotalRides' w='27826' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8594' id='16' name='MovingAverage' param='[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]' type-v2='filter' values='database' w='12299' x='83529' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='34373' id='5' is-fixed='true' name='MovingAverage' w='71002' x='28412' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7161' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='12592' x='59370' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5599' id='12' type-v2='text' w='10029' x='49122' y='1172'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#0a611b'>Drag and hold to select</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#0a611b'>time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63543' id='11' is-fixed='true' name='Heatmap' w='98828' x='586' y='35415'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FC4411A0-5F57-451E-BC24-56D2184F282C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MovingAverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[attr:Calculation_1556275152008769540:nk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152004837377:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9E8EC79-2991-48D9-93F1-73A41298FB58}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D98DC28E-B3DA-4A03-A97C-EE9EE3084CAF}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:temp real C (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD210CD9-5FBC-4C65-BE2E-E999EB3E6F19}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:weather:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E617AA5C-5147-457F-9A1D-1E57A198378A}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[hr:time:ok]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152008769540:nk]</field>
            <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16840D78-C32B-4A44-BC3D-072018869AF6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MovingAverage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalRides'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Calculation_1556275152005980162:qk]</field>
                    <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[none:Min Month (copy)_1556275152006610947:qk]</field>
                    <field>[federated.1rsy97213prhkg112xu0d02qsp4y].[sum:Calculation_1556275152010911749:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>#2015-05-01#</value>
                  <value>#2015-10-01#</value>
                  <value>5010343</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{8ADDD9E5-448A-4DC4-A5E6-D9E9E5E9DC93}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Heatmap' width='240'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='240' name='Hour' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='MovingAverage' width='240'>
      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
      DyGOlh70BSIwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='88' name='TotalRides' width='240'>
      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
      LgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Weather' width='240'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
